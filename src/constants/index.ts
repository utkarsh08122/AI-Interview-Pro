import { CreateAssistantDTO } from "@vapi-ai/web/dist/api";
import { z } from "zod";

export const mappings = {
  // "react.js": "react",
  // reactjs: "react",
  // react: "react",
  // "next.js": "nextjs",
  // nextjs: "nextjs",
  // next: "nextjs",
  // "vue.js": "vuejs",
  // vuejs: "vuejs",
  // vue: "vuejs",
  // "express.js": "express",
  // expressjs: "express",
  // express: "express",
  // "node.js": "nodejs",
  // nodejs: "nodejs",
  // node: "nodejs",
  // mongodb: "mongodb",
  // mongo: "mongodb",
  // mongoose: "mongoose",
  // mysql: "mysql",
  // postgresql: "postgresql",
  // sqlite: "sqlite",
  // firebase: "firebase",
  // docker: "docker",
  // kubernetes: "kubernetes",
  // aws: "aws",
  // azure: "azure",
  // gcp: "gcp",
  // digitalocean: "digitalocean",
  // heroku: "heroku",
  // photoshop: "photoshop",
  // "adobe photoshop": "photoshop",
  // html5: "html5",
  // html: "html5",
  // css3: "css3",
  // css: "css3",
  // sass: "sass",
  // scss: "sass",
  // less: "less",
  // tailwindcss: "tailwindcss",
  // tailwind: "tailwindcss",
  // bootstrap: "bootstrap",
  // jquery: "jquery",
  // typescript: "typescript",
  // ts: "typescript",
  // javascript: "javascript",
  // js: "javascript",
  // "angular.js": "angular",
  // angularjs: "angular",
  // angular: "angular",
  // "ember.js": "ember",
  // emberjs: "ember",
  // ember: "ember",
  // "backbone.js": "backbone",
  // backbonejs: "backbone",
  // backbone: "backbone",
  // nestjs: "nestjs",
  // graphql: "graphql",
  // "graph ql": "graphql",
  // apollo: "apollo",
  // webpack: "webpack",
  // babel: "babel",
  // "rollup.js": "rollup",
  // rollupjs: "rollup",
  // rollup: "rollup",
  // "parcel.js": "parcel",
  // parceljs: "parcel",
  // npm: "npm",
  // yarn: "yarn",
  // git: "git",
  // github: "github",
  // gitlab: "gitlab",
  // bitbucket: "bitbucket",
  // figma: "figma",
  // prisma: "prisma",
  // redux: "redux",
  // flux: "flux",
  // redis: "redis",
  // selenium: "selenium",
  // cypress: "cypress",
  // jest: "jest",
  // mocha: "mocha",
  // chai: "chai",
  // karma: "karma",
  // vuex: "vuex",
  // "nuxt.js": "nuxt",
  // nuxtjs: "nuxt",
  // nuxt: "nuxt",
  // strapi: "strapi",
  // wordpress: "wordpress",
  // contentful: "contentful",
  // netlify: "netlify",
  // vercel: "vercel",
  // "aws amplify": "amplify",
  
  "communication": ["communication", "communication skills", "verbal ability", "presentation"],
  "teamwork": ["teamwork", "collaboration", "working in a team"],
  "leadership": ["leadership", "mentoring", "leading teams"],
  "problem-solving": ["problem-solving", "critical thinking", "logical reasoning"],
  "time management": ["time management", "prioritization"],
  "adaptability": ["adaptability", "flexibility"],
  "creativity": ["creativity", "design thinking"],
  "project management": ["project management", "agile", "scrum", "kanban", "jira", "trello"],
  "ui/ux": ["ui", "ux", "user interface", "user experience", "wireframing", "prototyping"],
  "seo": ["seo", "search engine optimization"],
  "analytics": ["analytics", "google analytics", "data analysis"],
  "testing": ["testing", "unit testing", "integration testing", "test cases"],
  "documentation": ["documentation", "technical writing"],
  "marketing": ["marketing", "digital marketing", "social media"],
  "research": ["research", "market research", "user research"],
  "communication": ["communication", "verbal communication", "written communication", "presentation"],
  "teamwork": ["teamwork", "collaboration", "team player"],
  "leadership": ["leadership", "management", "project leadership"],
  "problem-solving": ["problem-solving", "critical thinking", "troubleshooting"],
  "creativity": ["creativity", "innovation", "idea generation"],
  "adaptability": ["adaptability", "flexibility", "resilience"],
  "time-management": ["time management", "punctuality", "scheduling"],
  "emotional-intelligence": ["empathy", "emotional intelligence", "self-awareness"],
  "decision-making": ["decision making", "judgment", "analytical thinking"],
  "negotiation": ["negotiation", "conflict resolution"],
  "customer-service": ["customer service", "client handling"],
  "documentation": ["documentation", "report writing"],
  "business-analysis": ["business analysis", "requirement gathering"],
  "scrum": ["scrum", "agile scrum", "scrum master"],
  "agile": ["agile", "agile methodology"],
  "jira": ["jira"],
  "confluence": ["confluence"],
  "asana": ["asana"],
  "notion": ["notion"],
  "trello": ["trello"],
  "slack": ["slack"],
  "zoom": ["zoom"],
  "ms-office": ["ms office", "excel", "word", "powerpoint"],
  "google-workspace": ["google workspace", "google docs", "google sheets", "google slides"],
  "amplify": ["aws amplify"],
  "android": ["android", "android studio"],
  "angular": ["angular", "angular.js", "angularjs"],
  "apollo": ["apollo"],
  "aws": ["aws", "amazon web services"],
  "azure": ["azure"],
  "babel": ["babel"],
  "backbone": ["backbone", "backbone.js", "backbonejs"],
  "bitbucket": ["bitbucket"],
  "bootstrap": ["bootstrap"],
  "c": ["c"],
  "c++": ["c++", "cpp"],
  "c#": ["c#", "csharp"],
  "chai": ["chai"],
  "cloudflare": ["cloudflare"],
  "contentful": ["contentful"],
  "css3": ["css", "css3"],
  "cypress": ["cypress"],
  "digitalocean": ["digitalocean"],
  "docker": ["docker"],
  "elasticsearch": ["elasticsearch"],
  "ember": ["ember", "ember.js", "emberjs"],
  "express": ["express", "express.js", "expressjs"],
  "fastapi": ["fastapi"],
  "figma": ["figma"],
  "firebase": ["firebase"],
  "flask": ["flask"],
  "flux": ["flux"],
  "gcp": ["gcp", "google cloud"],
  "git": ["git"],
  "github": ["github"],
  "gitlab": ["gitlab"],
  "graphql": ["graph ql", "graphql"],
  "heroku": ["heroku"],
  "html5": ["html", "html5"],
  "java": ["java"],
  "javascript": ["javascript", "js"],
  "jest": ["jest"],
  "jquery": ["jquery"],
  "kafka": ["kafka"],
  "kotlin": ["kotlin"],
  "kubernetes": ["kubernetes"],
  "laravel": ["laravel"],
  "less": ["less"],
  "linux": ["linux"],
  "mocha": ["mocha"],
  "mongodb": ["mongo", "mongodb"],
  "mongoose": ["mongoose"],
  "mysql": ["mysql"],
  "nestjs": ["nestjs"],
  "netlify": ["netlify"],
  "nextjs": ["next", "next.js", "nextjs"],
  "nodejs": ["node", "node.js", "nodejs"],
  "npm": ["npm"],
  "nuxt": ["nuxt", "nuxt.js", "nuxtjs"],
  "openai": ["openai", "chatgpt", "gpt-4"],
  "parcel": ["parcel.js", "parceljs"],
  "php": ["php"],
  "photoshop": ["adobe photoshop", "photoshop"],
  "postgresql": ["postgresql"],
  "prisma": ["prisma"],
  "python": ["python"],
  "react": ["react", "react.js", "reactjs"],
  "redis": ["redis"],
  "redux": ["redux"],
  "rollup": ["rollup", "rollup.js", "rollupjs"],
  "ruby": ["ruby", "ruby on rails"],
  "rust": ["rust"],
  "sass": ["sass", "scss"],
  "selenium": ["selenium"],
  "socket.io": ["socket.io"],
  "solidity": ["solidity"],
  "sqlite": ["sqlite"],
  "spring": ["spring", "spring boot"],
  "strapi": ["strapi"],
  "swift": ["swift"],
  "tailwindcss": ["tailwind", "tailwindcss"],
  "typescript": ["ts", "typescript"],
  "unity": ["unity", "unity3d"],
  "vercel": ["vercel"],
  "vuejs": ["vue", "vue.js", "vuejs"],
  "vuex": ["vuex"],
  "webpack": ["webpack"],
  "wordpress": ["wordpress"],
  "yarn": ["yarn"],
"aws amplify": "amplify",  
};

export const interviewer: CreateAssistantDTO = {
  name: "Interviewer",
  firstMessage:
    "Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.",
  transcriber: {
    provider: "deepgram",
    model: "nova-2",
    language: "en",
  },
  voice: {
    provider: "11labs",
    voiceId: "sarah",
    stability: 0.4,
    similarityBoost: 0.8,
    speed: 0.9,
    style: 0.5,
    useSpeakerBoost: true,
  },
  model: {
    provider: "openai",
    model: "gpt-4",
    messages: [
      {
        role: "system",
        content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.

Interview Guidelines:
Follow the structured question flow:
{{questions}}

Engage naturally & react appropriately:
Listen actively to responses and acknowledge them before moving forward.
Ask brief follow-up questions if a response is vague or requires more detail.
Keep the conversation flowing smoothly while maintaining control.
Be professional, yet warm and welcoming:

Use official yet friendly language.
Keep responses concise and to the point (like in a real voice interview).
Avoid robotic phrasing—sound natural and conversational.
Answer the candidate’s questions professionally:

If asked about the role, company, or expectations, provide a clear and relevant answer.
If unsure, redirect the candidate to HR for more details.

Conclude the interview properly:
Thank the candidate for their time.
Inform them that the company will reach out soon with feedback.
End the conversation on a polite and positive note.


- Be sure to be professional and polite.
- Keep all your responses short and simple. Use official language, but be kind and welcoming.
- This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,
      },
    ],
  },
};

export const feedbackSchema = z.object({
  totalScore: z.number(),
  categoryScores: z.tuple([
    z.object({
      name: z.literal("Communication Skills"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("Technical Knowledge"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("Problem Solving"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("Cultural Fit"),
      score: z.number(),
      comment: z.string(),
    }),
    z.object({
      name: z.literal("Confidence and Clarity"),
      score: z.number(),
      comment: z.string(),
    }),
  ]),
  strengths: z.array(z.string()),
  areasForImprovement: z.array(z.string()),
  finalAssessment: z.string(),
});

export const interviewCovers = [
  "/adobe.png",
  "/amazon.png",
  "/facebook.png",
  "/hostinger.png",
  "/pinterest.png",
  "/quora.png",
  "/reddit.png",
  "/skype.png",
  "/spotify.png",
  "/telegram.png",
  "/tiktok.png",
  "/yahoo.png",
];

export const dummyInterviews: Interview[] = [
  {
    id: "1",
    userId: "user1",
    role: "Frontend Developer",
    type: "Technical",
    techstack: ["React", "TypeScript", "Next.js", "Tailwind CSS"],
    level: "Junior",
    questions: ["What is React?"],
    finalized: false,
    createdAt: "2024-03-15T10:00:00Z",
  },
  {
    id: "2",
    userId: "user1",
    role: "Full Stack Developer",
    type: "Mixed",
    techstack: ["Node.js", "Express", "MongoDB", "React"],
    level: "Senior",
    questions: ["What is Node.js?"],
    finalized: false,
    createdAt: "2024-03-14T15:30:00Z",
  },
];
